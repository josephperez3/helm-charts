apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "wave-server.fullname" . }}
  labels:
    {{- include "wave-server.labels" . | nindent 4 }}
spec:
  serviceName: "{{ include "wave-server.fullname" . }}-headless"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wave-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # This is just to make k8s rollout a new version if config map change
        checksum/config: {{ include (print $.Chart.Name "/templates/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "wave-server.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # To simulate a heavy application that take time to start
      initContainers:
        - name: init
          image: busybox
          command: ['sh', '-c', 'sleep 30']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-root
              mountPath: /usr/share/nginx/html
      volumes:
        - name: nginx-root
          configMap:
            name: {{ include "wave-server.fullname" . }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
